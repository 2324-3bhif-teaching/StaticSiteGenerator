@startuml classDiagram
hide empty fields
hide empty methods

class App <<File>>
{
  App app
  Router themesRouter
  Router projectsRouter
  Router usersRouter
}

class themesRouter <<File>>
{
  GET <<all public themes>>
  GET <<all themes of userName>>
  GET <<Theme with userName and name>>
  --
  POST <<Theme with userName and name>>
  --
  PUT <<Theme with userName and name>>
  --
  DELETE <<Theme with userName and name>>
}

class projectsRouter <<File>>
{
  GET <<Projects of a userName>>
  GET <<Project with userName and name>>
  --
  POST <<Project with userName and name>>
  PUT <<Project with userName and name>>
  --
  DELETE <<Project with userName and name>>
}

class usersRouter <<File>>
{
  POST <<User with name and password>>
  --
  PATCH <<password with name>>
  PATH <<username with name>>
  --
  DELETE <<User with name>>
}

class DB
{
  +Promise<Database> createConnection()
  +Promise<void> ensureTablesCreated()
  +Promise<void> startTransmission()
  +Promise<void> commit()
  +Promise<void> rollback()
}

interface Project
{
  string name
  Theme theme
  File[] files
}

interface File
{
  number index
  string path
}

interface User
{
  string name
  string password
  Theme[] themes
  Project[] projects
}

interface Style
{
  string property
  string value
}

class Theme
{
  +string name
  +string userName
  +bool isPublic
  +Map<string, Style[]> getStyles()
  +string toString()
}

class Converter <<File>>
{
  +string generateCSS(Theme)
  +string convertFile(Project, number)
  +string convertProject(Project)
}

User "1" o-- "n" Project
User "1" o-l- "n" Theme
Project "1" *-l- "1" Theme
Converter "1" *-l- "n" Project
Theme "1" o-- "n" Style
Project "1" o-- "n" File
App "1" *-- "1" themesRouter
App "1" *-- "1" projectsRouter
App "1" *-- "1" usersRouter
themesRouter "1" o-- "n" Theme
projectsRouter "1" o-- "n" Project
usersRouter "1" o-- "n" User
themesRouter "1" *--- "1" DB
projectsRouter "1" *--- "1" DB
usersRouter "1" *--- "1" DB

@enduml